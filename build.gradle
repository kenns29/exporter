repositories {
  maven { url 'http://maven.restlet.com' }
  mavenCentral()
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = "edu.vader.exporter.Main"
archivesBaseName = 'exporter'

version = {->
    def lines = file('src/main/java/edu/vader/exporter/Main.java').readLines();
    def extract = {name ->
        lines.grep {it =~ /public static final int $name =/}[0].replaceFirst(/.*=\s*(\d+);.*/, '$1')
    }
    extract('VERSION_MAJOR') + '.' + extract('VERSION_MINOR') + '.' + extract('BUILD_ID')
}()

dependencies {
	compile 'org.mongodb:mongo-java-driver:3.0.2'
	compile 'log4j:log4j:1.2.17'
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'commons-io:commons-io:2.4'
	compile 'postgresql:postgresql:9.1-901-1.jdbc4'
	compile 'joda-time:joda-time:2.8.1'
	compile 'com.vividsolutions:jts:1.13'
	compile 'com.google.code.gson:gson:2.3.1'
	compile 'org.restlet.jse:org.restlet:2.3.+'
    compile 'org.restlet.jse:org.restlet.ext.slf4j:2.3.+'
}

distZip {
    into(project.name + '-' + version) {
        from '.'
        include 'config.properties'
    }
}
distTar {
    into(project.name + '-' + version) {
        from '.'
        include 'config.properties'
    }
}

jar {
    archiveName = "exporter.jar"

    manifest {
        attributes 'Main-Class': 'edu.vader.exporter.Main',
        		   'Implementation-Title': 'exporter', 
				   'Implementation-Version': version,
				   'Implementation-Vendor': 'vaderlab',
        		   'Class-Path': configurations.compile.collect { it.getName() }.join(' ')
    }
}
